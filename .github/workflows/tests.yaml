name: tests.yaml # try to keep name the same as current file name (tests.yaml in this case)
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
jobs:
  test_js:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, macos-13]
        architecture: [x64]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Get Prebuild Name
        id: prebuild
        shell: bash
        run: |
          PREBUILD_FOLDER_NAME=$(node -p "require('os').platform() + '-' + require('os').arch()")
          echo "PREBUILD_FOLDER_NAME=$PREBUILD_FOLDER_NAME" >> $GITHUB_OUTPUT
      - name: Cache ${{ steps.prebuild.outputs['PREBUILD_FOLDER_NAME'] }} build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: prebuilds/${{ steps.prebuild.outputs['PREBUILD_FOLDER_NAME'] }}
          key: build-${{ steps.prebuild.outputs['PREBUILD_FOLDER_NAME'] }}-${{ hashFiles('src/**/*.cpp', 'src/**/*.hpp', 'third_party/**/*.*') }}
          restore-keys: |
            build-${{ steps.prebuild.outputs['PREBUILD_FOLDER_NAME'] }}-${{ hashFiles('src/**/*.cpp', 'src/**/*.hpp', 'third_party/**/*.*') }}
      - name: Build if no cache
        if: steps.cache-build.outputs.cache-hit == 'false'
        run: npm run prebuildify
      - name: Copy libz3.dll into prebuild folder (Windows only)
        if: (steps.cache-build.outputs.cache-hit == 'false') && (matrix.os == 'windows-latest')
        shell: bash
        run: |
          DLL_SOURCE=third_party/z3/lib/${{ steps.prebuild.outputs['PREBUILD_FOLDER_NAME'] }}/libz3.dll
          DLL_TARGET=prebuilds/${{ steps.prebuild.outputs['PREBUILD_FOLDER_NAME'] }}/libz3.dll
          cp "$DLL_SOURCE" "$DLL_TARGET"
      - name: Run JS tests
        run: npm run test:js
  test_cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache CMake tests/build/ directory
        uses: actions/cache@v4
        with:
          path: tests/build/
          key: cmake-${{ runner.os }}-${{ hashFiles('CMakeLists.txt', '**/*.cpp', '**/*.hpp') }}
          restore-keys: |
            cmake-${{ runner.os }}-${{ hashFiles('CMakeLists.txt', '**/*.cpp', '**/*.hpp') }}
      - name: Build and run tests
        run: npm test